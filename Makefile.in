
VPATH = @srcdir@
SRCDIR = @srcdir@
INCDIR = $(SRCDIR)/../../include

#Path of MPI-Library on the Machine
MPI_DIR     = @mpi_dir@
MPI_INC_DIR = @mpi_inc_dir@
MPI_LIB_DIR = @mpi_lib_dir@

#Path of PACX-Library on the Machine
PACX_INC_DIR = @pacx_dir@/include
PACX_LIB_DIR = @pacx_dir@/lib

#
# For additional setting of the environment (some MPIs have known errors),
# one may set one of the following Compiler flags (in the beautiful future,
# this should be checked by configure automagically):
#   HAVE_MPI_LAM
#   HAVE_MPI_INTEL10
#   HAVE_MPI_INTEL20
#   HAVE_MPI_NECSX
#   HAVE_MPI_OPENMPI
#   HAVE_MPI_MPICH1
#   HAVE_MPI_MPICH2
#

@SET_MAKE@
# YES, we need those two includes! Otherwise, if configure is done in other dir
# the newly created, system-specific include-files aren't found!
CFLAGS       = @CFLAGS@ -I. -I@srcdir@ @pacx_inc_command@ -I$(MPI_INC_DIR) @SYS_HOSTCFLAGS@
CC           = @CC@
FC           = @F77@
RM           = rm -fr
MV           = mv
FFLAGS       = @FFLAGS@ $(DEFS) @pacx_inc_command@ -I$(MPI_INC_DIR)
LDFLAGS      = @pacx_lib_command@ -L$(MPI_LIB_DIR) @pacx_lib@ -l@lib_mpi@ @SYS_LDFLAGS@
SHELL        = /bin/sh

INSTALL_DIR  = @prefix@

############  end of configure section #############################

OBJ =	coll/tst_coll_allgather.o \
	coll/tst_coll_allgather_in_place.o \
	coll/tst_coll_allreduce.o \
	coll/tst_coll_allreduce_in_place.o \
	coll/tst_coll_allreduce_max.o \
	coll/tst_coll_allreduce_min.o \
	coll/tst_coll_allreduce_quadsum.o \
	coll/tst_coll_allreduce_sum.o \
	coll/tst_coll_alltoall.o \
	coll/tst_coll_bcast.o \
	coll/tst_coll_gather.o \
	coll/tst_coll_reduce_in_place_max.o \
	coll/tst_coll_reduce_in_place_min.o \
	coll/tst_coll_reduce_max.o \
	coll/tst_coll_reduce_min.o \
	coll/tst_coll_scan_sum.o \
	coll/tst_coll_scatter.o \
	coll/tst_coll_scatterv.o \
	coll/tst_coll_scatterv_stride.o \
	dynamic/tst_comm_spawn.o \
	dynamic/tst_comm_spawn_multiple.o \
	dynamic/tst_establish_communication.o \
	env/tst_env_request_null.o \
	env/tst_env_status_check.o \
	io/tst_file_simple.o \
	io/tst_file_append_mode.o \
	io/tst_file_asyncio_atomic.o \
	io/tst_file_io_atomic.o \
	io/tst_file_io_commself.o \
	io/tst_file_io_sync.o \
	io/tst_file_io_with_arrange.o \
	io/tst_file_io_with_hole.o \
	io/tst_file_io_with_hole2.o \
	io/tst_file_iread.o \
	io/tst_file_iread_at.o \
	io/tst_file_iread_shared.o \
	io/tst_file_iwrite.o \
	io/tst_file_iwrite_at.o \
	io/tst_file_iwrite_shared.o \
	io/tst_file_preallocate.o \
	io/tst_file_read.o \
	io/tst_file_read_all.o \
	io/tst_file_read_all_begin.o \
	io/tst_file_read_at.o \
	io/tst_file_read_at_all.o \
	io/tst_file_read_at_all_begin.o \
	io/tst_file_read_convert.o \
	io/tst_file_read_darray.o \
	io/tst_file_read_ordered.o \
	io/tst_file_read_ordered_begin.o \
	io/tst_file_read_shared.o \
	io/tst_file_read_subarray.o \
	io/tst_file_sequential_mode.o \
	io/tst_file_set_size.o \
	io/tst_file_write.o \
	io/tst_file_write_all.o \
	io/tst_file_write_all_begin.o \
	io/tst_file_write_at.o \
	io/tst_file_write_at_all.o \
	io/tst_file_write_at_all_begin.o \
	io/tst_file_write_darray.o \
	io/tst_file_write_ordered.o \
	io/tst_file_write_ordered_begin.o \
	io/tst_file_write_shared.o \
	io/tst_file_write_subarray.o \
	mpi_test_suite.o \
	one-sided/tst_accumulate_with_fence_sum.o \
	one-sided/tst_accumulate_with_lock_max.o \
	one-sided/tst_accumulate_with_post_min.o \
	one-sided/tst_get_with_fence.o \
	one-sided/tst_get_with_lock.o \
	one-sided/tst_get_with_post.o \
	one-sided/tst_one_sided_simple_ring_get.o \
	one-sided/tst_one_sided_simple_ring_get_post.o \
	one-sided/tst_one_sided_simple_ring_put.o \
	one-sided/tst_put_with_fence.o \
	one-sided/tst_put_with_lock.o \
	one-sided/tst_put_with_post.o \
	p2p/tst_p2p_alltoall.o \
	p2p/tst_p2p_alltoall_graph.o \
	p2p/tst_p2p_alltoall_irsend.o \
	p2p/tst_p2p_alltoall_issend.o \
	p2p/tst_p2p_alltoall_persistent.o \
	p2p/tst_p2p_alltoall_probe_anysource.o \
	p2p/tst_p2p_alltoall_sendrecv.o \
	p2p/tst_p2p_alltoall_xisend.o \
	p2p/tst_p2p_direct_partner_intercomm.o \
	p2p/tst_p2p_many_to_one.o \
	p2p/tst_p2p_many_to_one_iprobe_anysource.o \
	p2p/tst_p2p_many_to_one_isend_cancel.o \
	p2p/tst_p2p_many_to_one_probe_anysource.o \
	p2p/tst_p2p_simple_ring.o \
	p2p/tst_p2p_simple_ring_bottom.o \
	p2p/tst_p2p_simple_ring_bsend.o \
	p2p/tst_p2p_simple_ring_ibsend.o \
	p2p/tst_p2p_simple_ring_irsend.o \
	p2p/tst_p2p_simple_ring_isend.o \
	p2p/tst_p2p_simple_ring_issend.o \
	p2p/tst_p2p_simple_ring_pack.o \
	p2p/tst_p2p_simple_ring_persistent.o \
	p2p/tst_p2p_simple_ring_rsend.o \
	p2p/tst_p2p_simple_ring_sendrecv.o \
	p2p/tst_p2p_simple_ring_shift.o \
	p2p/tst_p2p_simple_ring_ssend.o \
	p2p/tst_p2p_simple_ring_xsend.o \
	p2p/tst_p2p_simple_ring_persistent.o\
	threaded/tst_threaded_comm_dup.o \
	threaded/tst_threaded_ring.o \
	threaded/tst_threaded_ring_bsend.o \
	threaded/tst_threaded_ring_isend.o \
	threaded/tst_threaded_ring_persistent.o \
	tst_comm.o \
	tst_file.o \
	tst_output.o \
	tst_tests.o \
	tst_threads.o \
	tst_types.o

####################################################################


HEADER = config.h

PROGRAM = mpi_test_suite

.SUFFIXES: .o .c

all: $(OBJ)
	$(CC) -o $(PROGRAM) $(OBJ) $(LDFLAGS)

$(OBJ): $(HEADER)
.c.o:   $(HEADER)
	$(CC) $(CFLAGS) -c $< -o $@

clean mostlyclean:
	$(RM) $(OBJ) $(PROGRAM)

distclean extraclean: clean
	$(RM) patch* *~* *\#* *.orig *.rej *.bak core a.out Makefile

.PHONY: install mostlyclean clean distclean extraclean realclean TAGS check
